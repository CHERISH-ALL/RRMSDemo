Index: RRMS-backend/src/main/java/com/rrmsbackend/mapper/AdminMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RRMS-backend/src/main/java/com/rrmsbackend/mapper/AdminMapper.java b/RRMS-backend/src/main/java/com/rrmsbackend/mapper/AdminMapper.java
new file mode 100644
--- /dev/null	(date 1689158292938)
+++ b/RRMS-backend/src/main/java/com/rrmsbackend/mapper/AdminMapper.java	(date 1689158292938)
@@ -0,0 +1,11 @@
+package com.rrmsbackend.mapper;
+
+import com.rrmsbackend.eneity.Admin;
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Select;
+
+@Mapper
+public interface AdminMapper {
+    @Select("select * from admin where aname = #{text}")
+    Admin findAdminByAname(String text);
+}
Index: RRMS-backend/src/test/java/com/rrmsbackend/RrmsBackendApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rrmsbackend;\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\n\r\n@SpringBootTest\r\nclass RrmsBackendApplicationTests {\r\n\r\n    @Test\r\n    void contextLoads() {\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RRMS-backend/src/test/java/com/rrmsbackend/RrmsBackendApplicationTests.java b/RRMS-backend/src/test/java/com/rrmsbackend/RrmsBackendApplicationTests.java
--- a/RRMS-backend/src/test/java/com/rrmsbackend/RrmsBackendApplicationTests.java	(revision 8f8d0790e1d307b637bfb8777dc98fea6824e974)
+++ b/RRMS-backend/src/test/java/com/rrmsbackend/RrmsBackendApplicationTests.java	(date 1689158292939)
@@ -8,6 +8,6 @@
 
     @Test
     void contextLoads() {
+//        BCryptPasswordEncoder encoder=new BCryptPasswordEncoder();
     }
-
 }
Index: RRMS-backend/src/main/java/com/rrmsbackend/eneity/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RRMS-backend/src/main/java/com/rrmsbackend/eneity/Admin.java b/RRMS-backend/src/main/java/com/rrmsbackend/eneity/Admin.java
new file mode 100644
--- /dev/null	(date 1689158292938)
+++ b/RRMS-backend/src/main/java/com/rrmsbackend/eneity/Admin.java	(date 1689158292938)
@@ -0,0 +1,10 @@
+package com.rrmsbackend.eneity;
+
+import lombok.Data;
+
+@Data
+public class Admin {
+    int ano;
+    String aname;
+    String amima;
+}
Index: RRMS-backend/src/main/java/com/rrmsbackend/service/AdminService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RRMS-backend/src/main/java/com/rrmsbackend/service/AdminService.java b/RRMS-backend/src/main/java/com/rrmsbackend/service/AdminService.java
new file mode 100644
--- /dev/null	(date 1689158292939)
+++ b/RRMS-backend/src/main/java/com/rrmsbackend/service/AdminService.java	(date 1689158292939)
@@ -0,0 +1,33 @@
+package com.rrmsbackend.service;
+
+import com.rrmsbackend.eneity.Admin;
+import com.rrmsbackend.mapper.AdminMapper;
+import jakarta.annotation.Resource;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.security.core.userdetails.UserDetails;
+import org.springframework.security.core.userdetails.UserDetailsService;
+import org.springframework.security.core.userdetails.UsernameNotFoundException;
+import org.springframework.stereotype.Service;
+
+@Service
+public class AdminService implements UserDetailsService {
+
+    @Resource
+    AdminMapper adminMapper;
+
+    @Override
+    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
+        if(username == null){
+            throw new UsernameNotFoundException("用户名不能为空");
+        }
+        Admin admin= adminMapper.findAdminByAname(username);
+        if(admin==null){
+            throw new UsernameNotFoundException("用户名或密码错误");
+        }
+        return User
+                .withUsername(admin.getAname())
+                .password("{noop}"+admin.getAmima())
+                .roles("user")
+                .build();
+    }
+}
